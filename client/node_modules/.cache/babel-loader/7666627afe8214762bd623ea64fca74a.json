{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpFailure } from './user.actions';\nexport function* getSnapshotFromAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure());\n  }\n}\nexport function* signUp({\n  payload: {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument(user, {\n      displayName\n    }));\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signinWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signinWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/React_VSG/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpFailure","getSnapshotFromAuth","userAuth","userRef","userSnapshot","get","id","data","error","message","signOut","signUp","payload","displayName","email","password","confirmPassword","user","createUserWithEmailAndPassword","signInWithGoogle","signInWithPopup","signinWithEmail","signInWithEmailAndPassword","isUserAuthenticated","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,EAAyDC,cAAzD,QAA8E,+BAA9E;AACA,SAAQC,aAAR,EAAuBC,aAAvB,EAAsCC,cAAtC,EAAsDC,cAAtD,EAAsEC,aAAtE,QAA0F,gBAA1F;AAEA,OAAO,UAAUC,mBAAV,CAA8BC,QAA9B,EAAuC;AAC1C,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMb,IAAI,CAACI,yBAAD,EAA4BQ,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMjB,GAAG,CAACQ,aAAa,CAAC;AACpBU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADG;AAEpB,SAAGF,YAAY,CAACG,IAAb;AAFiB,KAAD,CAAd,CAAT;AAIH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZ,UAAMpB,GAAG,CAACS,aAAa,CAACW,KAAK,CAACC,OAAP,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,OAAV,GAAmB;AACtB,MAAI;AACA,UAAMlB,IAAI,CAACkB,OAAL,EAAN;AACA,UAAMtB,GAAG,CAACU,cAAc,EAAf,CAAT;AACH,GAHD,CAGE,OAAOU,KAAP,EAAc;AACZ,UAAMpB,GAAG,CAACW,cAAc,EAAf,CAAT;AACH;AACJ;AACD,OAAO,UAAUY,MAAV,CAAiB;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,WAAD;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA;AAA/B;AAAV,CAAjB,EAA4E;AAC/E,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMzB,IAAI,CAAC0B,8BAAL,CAAoCJ,KAApC,EAA2CC,QAA3C,CAArB;AACA,UAAMZ,OAAO,GAAG,MAAMb,IAAI,CAACI,yBAAyB,CAACuB,IAAD,EAAO;AAACJ,MAAAA;AAAD,KAAP,CAA1B,CAA1B;AACA,UAAMT,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMjB,GAAG,CAACQ,aAAa,CAAC;AACpBU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADG;AAEpB,SAAGF,YAAY,CAACG,IAAb;AAFiB,KAAD,CAAd,CAAT;AAKH,GATD,CASE,OAAOC,KAAP,EAAc;AACZ,UAAMpB,GAAG,CAACY,aAAa,CAACQ,KAAD,CAAd,CAAT;AACH;AAEJ;AAED,OAAO,UAAUW,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAACF,MAAAA;AAAD,QAAS,MAAMzB,IAAI,CAAC4B,eAAL,CAAqB3B,cAArB,CAArB;AACA,UAAMQ,mBAAmB,CAACgB,IAAD,CAAzB;AACH,GAHD,CAGE,OAAOT,KAAP,EAAc;AACZ,UAAMpB,GAAG,CAACS,aAAa,CAACW,KAAK,CAACC,OAAP,CAAd,CAAT;AACH;AACJ;AACD,OAAO,UAAUY,eAAV,CAA0B;AAACT,EAAAA,OAAO,EAAE;AAACE,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAuD;AAC1D,MAAI;AACA,UAAM;AAACE,MAAAA;AAAD,QAAS,MAAMzB,IAAI,CAAC8B,0BAAL,CAAgCR,KAAhC,EAAuCC,QAAvC,CAArB;AACA,UAAMd,mBAAmB,CAACgB,IAAD,CAAzB;AACH,GAHD,CAGE,OAAOT,KAAP,EAAc;AACZ,UAAMpB,GAAG,CAACS,aAAa,CAACW,KAAD,CAAd,CAAT;AACH;AACJ;AACD,OAAO,UAAUe,mBAAV,GAA+B;AAClC,MAAI;AACA,UAAMrB,QAAQ,GAAG,MAAMP,cAAc,EAArC;AACA,QAAG,CAACO,QAAJ,EAAc;AACd,UAAMD,mBAAmB,CAACC,QAAD,CAAzB;AACH,GAJD,CAIE,OAAOM,KAAP,EAAc;AACZ,UAAMpB,GAAG,CAACS,aAAa,CAACW,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUgB,mBAAV,GAA+B;AAClC,QAAMrC,UAAU,CAACI,eAAe,CAACkC,oBAAjB,EAAuCN,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUO,kBAAV,GAA+B;AAClC,QAAMvC,UAAU,CAACI,eAAe,CAACoC,mBAAjB,EAAsCN,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUO,kBAAV,GAA8B;AACjC,QAAMzC,UAAU,CAACI,eAAe,CAACsC,kBAAjB,EAAqCN,mBAArC,CAAhB;AACH;AAED,OAAO,UAAUO,cAAV,GAA0B;AAC7B,QAAM3C,UAAU,CAACI,eAAe,CAACwC,cAAjB,EAAiCrB,OAAjC,CAAhB;AACH;AAED,OAAO,UAAUsB,aAAV,GAAyB;AAC5B,QAAM7C,UAAU,CAACI,eAAe,CAAC0C,aAAjB,EAAgCtB,MAAhC,CAAhB;AACH;AAGD,OAAO,UAAUuB,SAAV,GAAsB;AACzB,QAAM7C,GAAG,CAAC,CACNC,IAAI,CAACkC,mBAAD,CADE,EAENlC,IAAI,CAACoC,kBAAD,CAFE,EAGNpC,IAAI,CAACiC,mBAAD,CAHE,EAINjC,IAAI,CAACwC,cAAD,CAJE,EAKNxC,IAAI,CAAC0C,aAAD,CALE,CAAD,CAAT;AAOH","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport {auth, googleProvider, createUserProfileDocument, getCurrentUser} from '../../firebase/firebase.utils';\r\nimport {signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpFailure} from './user.actions'\r\n\r\nexport function* getSnapshotFromAuth(userAuth){\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, userAuth);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signInSuccess({\r\n            id: userSnapshot.id,\r\n            ...userSnapshot.data()\r\n        }));\r\n    } catch (error) {\r\n        yield put(signInFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* signOut(){\r\n    try {\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess())\r\n    } catch (error) {\r\n        yield put(signOutFailure())\r\n    }\r\n}\r\nexport function* signUp({payload: {displayName, email, password, confirmPassword}}){\r\n    try {\r\n        const {user} = yield auth.createUserWithEmailAndPassword(email, password);\r\n        const userRef = yield call(createUserProfileDocument(user, {displayName}));\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signInSuccess({\r\n            id: userSnapshot.id,\r\n            ...userSnapshot.data()\r\n        }));\r\n        \r\n    } catch (error) {\r\n        yield put(signUpFailure(error));\r\n    }\r\n\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromAuth(user);\r\n    } catch (error) {\r\n        yield put(signInFailure(error.message));\r\n    }\r\n}\r\nexport function* signinWithEmail({payload: {email, password}}){\r\n    try {\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromAuth(user);\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\nexport function* isUserAuthenticated(){\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if(!userAuth) return;\r\n        yield getSnapshotFromAuth(userAuth);\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signinWithEmail)\r\n}\r\n\r\nexport function* onCheckUserSession(){\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\nexport function* onSignOutStart(){\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\r\n}\r\n\r\nexport function* onSignUpStart(){\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\r\n}\r\n\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(isUserAuthenticated),\r\n        call(onSignOutStart),\r\n        call(onSignUpStart)\r\n    ]);\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}